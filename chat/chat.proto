syntax="proto3";
//protoc --proto_path=$GOPATH/src:. --micro_out=. --go_out=. chat.proto

import "google/protobuf/timestamp.proto";

option go_package = "github.com/peyman-se/protos/chat";
package chat;

message Message {
    string ID = 1;
	string ChannelID = 2;
    User Sender = 3;
	string Content = 4;
	string MediaType = 5;
	string MediaURL = 6;
	google.protobuf.Timestamp CreatedAt = 7;
	google.protobuf.Timestamp UpdatedAt = 8;
    string Route = 9;
}

message User {
    string UserID = 1;
    string TenantID = 2;
    bool IsExternal = 3;
}

message Channel {
    string ID = 1;
	string Name = 2;
	google.protobuf.Timestamp LastMessageAt = 3;
	string LastMessage = 4;
	string LastMessageUserID = 5;
    string TenantID = 6;
    bool IsQueued = 7;
    repeated User Users = 8;
	optional google.protobuf.Timestamp CreatedAt = 9;
	optional google.protobuf.Timestamp UpdatedAt = 10;
    
}

message GetChannelMessagesRequest {
    User User = 1;
    string ChannelID = 2;
    int64 Page = 3;
}

message GetChannelMessagesResponse {
    repeated Message messages = 1;
    User User = 2;
    int64 Page = 3;
}

message PostChannelMessageRequest {
    string ChannelID = 1;
    string Content = 2;
    optional string MediaType = 3;
	optional string MediaURL = 4;
    repeated User Users = 5;
}

message PostChannelMessageResponse {
    Message Message = 1;
    Channel Channel = 2;
    repeated User Users = 3;
}

message GetUserChannelsRequest {
    User User = 1;
}

message GetUserChannelsResponse {
    repeated Channel channels = 1;
    User  User = 2;
}

service ChatService {
    rpc GetChannelMessages (GetChannelMessagesRequest) returns (GetChannelMessagesResponse) {};
    rpc PostChannelMessage (PostChannelMessageRequest) returns (PostChannelMessageResponse) {};
    rpc GetUserChannels (GetUserChannelsRequest) returns (GetUserChannelsResponse) {};
}